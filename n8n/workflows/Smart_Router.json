{
  "name": "Smart Router",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "smart-router",
        "options": {}
      },
      "id": "router-webhook",
      "name": "Smart Router Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "smart-router"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "tier-check",
              "leftValue": "={{ $json.processing_tier }}",
              "rightValue": "high",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "tier-router",
      "name": "Processing Tier Router",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "medium-tier",
              "leftValue": "={{ $json.processing_tier }}",
              "rightValue": "medium",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "medium-tier-check",
      "name": "Medium Tier Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 400]
    },
    {
      "parameters": {
        "url": "http://localhost:5678/webhook/classification",
        "authentication": "none",
        "requestMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "document_id",
              "value": "={{ $json.document_id }}"
            },
            {
              "name": "processing_tier",
              "value": "high"
            },
            {
              "name": "routing_reason",
              "value": "High quality document - Auto processing"
            },
            {
              "name": "quality_score",
              "value": "={{ $json.quality_score }}"
            }
          ]
        },
        "options": {}
      },
      "id": "high-tier-route",
      "name": "Route to High Tier Processing",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 200]
    },
    {
      "parameters": {
        "url": "http://localhost:5678/webhook/classification",
        "authentication": "none",
        "requestMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "document_id",
              "value": "={{ $json.document_id }}"
            },
            {
              "name": "processing_tier",
              "value": "medium"
            },
            {
              "name": "routing_reason",
              "value": "Medium quality document - Enhanced processing"
            },
            {
              "name": "quality_score",
              "value": "={{ $json.quality_score }}"
            }
          ]
        },
        "options": {}
      },
      "id": "medium-tier-route",
      "name": "Route to Medium Tier Processing",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 340]
    },
    {
      "parameters": {
        "url": "http://imp-fastapi:8000/api/manual-review/queue",
        "authentication": "none",
        "requestMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "document_id",
              "value": "={{ $json.document_id }}"
            },
            {
              "name": "processing_tier",
              "value": "low"
            },
            {
              "name": "routing_reason",
              "value": "Low quality document - Manual review required"
            },
            {
              "name": "quality_score",
              "value": "={{ $json.quality_score }}"
            },
            {
              "name": "priority",
              "value": "normal"
            }
          ]
        },
        "options": {}
      },
      "id": "low-tier-route",
      "name": "Route to Manual Review",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 460]
    },
    {
      "parameters": {
        "jsCode": "\n// Smart Router Logic - Phase 1\nconst input = $input.all()[0].json;\nconst timestamp = new Date().toISOString();\n\n// Log routing decision\nconst routingDecision = {\n  document_id: input.document_id,\n  quality_score: input.quality_score,\n  processing_tier: input.processing_tier,\n  routing_timestamp: timestamp,\n  route_taken: '',\n  expected_completion: '',\n  next_workflow: ''\n};\n\n// Determine route based on tier\nswitch (input.processing_tier) {\n  case 'high':\n    routingDecision.route_taken = 'automated_processing';\n    routingDecision.expected_completion = new Date(Date.now() + 5 * 60 * 1000).toISOString(); // 5 minutes\n    routingDecision.next_workflow = 'Document_Classification';\n    break;\n    \n  case 'medium':\n    routingDecision.route_taken = 'enhanced_processing';\n    routingDecision.expected_completion = new Date(Date.now() + 10 * 60 * 1000).toISOString(); // 10 minutes\n    routingDecision.next_workflow = 'Document_Classification';\n    break;\n    \n  case 'low':\n    routingDecision.route_taken = 'manual_review';\n    routingDecision.expected_completion = new Date(Date.now() + 30 * 60 * 1000).toISOString(); // 30 minutes\n    routingDecision.next_workflow = 'Manual_Review_Queue';\n    break;\n    \n  default:\n    routingDecision.route_taken = 'error_fallback';\n    routingDecision.expected_completion = new Date(Date.now() + 60 * 60 * 1000).toISOString(); // 1 hour\n    routingDecision.next_workflow = 'Manual_Review_Queue';\n}\n\n// Add performance metrics\nroutingDecision.performance_metrics = {\n  estimated_accuracy: {\n    'high': '95%',\n    'medium': '85%',\n    'low': '70%'\n  }[input.processing_tier] || '60%',\n  \n  processing_cost: {\n    'high': '$0.02',\n    'medium': '$0.05',\n    'low': '$0.25'\n  }[input.processing_tier] || '$0.50',\n  \n  automation_level: {\n    'high': 'fully_automated',\n    'medium': 'semi_automated',\n    'low': 'manual_review'\n  }[input.processing_tier] || 'manual'\n};\n\nreturn [{ json: routingDecision }];\n"
      },
      "id": "routing-logic",
      "name": "Routing Decision Logger",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "url": "http://imp-fastapi:8000/api/routing/log",
        "authentication": "none",
        "requestMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "document_id",
              "value": "={{ $json.document_id }}"
            },
            {
              "name": "routing_decision",
              "value": "={{ $json }}"
            }
          ]
        },
        "options": {}
      },
      "id": "log-routing",
      "name": "Log Routing Decision",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1340, 300]
    }
  ],
  "connections": {
    "Smart Router Webhook": {
      "main": [
        [
          {
            "node": "Processing Tier Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Processing Tier Router": {
      "main": [
        [
          {
            "node": "Route to High Tier Processing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Medium Tier Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Medium Tier Check": {
      "main": [
        [
          {
            "node": "Route to Medium Tier Processing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Route to Manual Review",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route to High Tier Processing": {
      "main": [
        [
          {
            "node": "Routing Decision Logger",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route to Medium Tier Processing": {
      "main": [
        [
          {
            "node": "Routing Decision Logger",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route to Manual Review": {
      "main": [
        [
          {
            "node": "Routing Decision Logger",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Routing Decision Logger": {
      "main": [
        [
          {
            "node": "Log Routing Decision",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "3",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "smart-router",
  "tags": [
    {
      "createdAt": "2025-01-07T12:00:00.000Z",
      "updatedAt": "2025-01-07T12:00:00.000Z",
      "id": "imp-phase1",
      "name": "IMP Phase 1"
    }
  ]
}
